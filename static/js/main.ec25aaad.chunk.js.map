{"version":3,"sources":["redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Header/Header.js","components/Logo/logo.svg","components/Logo/Logo.js","components/ShowModal/ShowModalWarning.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["actions","addContact","createAction","text","payload","contacts","id","uuidv4","removeContact","changeFilter","showModalWarning","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","sameNameContact","props","contactsItems","map","contact","includes","inputNumber","Number","onSameNameContact","setTimeout","length","alert","onAddContact","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","placeholder","autoComplete","autoFocus","onChange","TaskEditor_button","Component","mapDispatchToProps","contactsActions","connect","onRemoveContact","normalizedFilter","filter","toLowerCase","item","TransitionGroup","component","CSSTransition","timeout","classNames","onClick","onChangeFilter","Header","Logo","src","logo","alt","ShowModalWarning","modalWarning","in","appear","unmountOnExit","stage","createReducer","action","combineReducers","store","configureStore","reducer","contactReducer","ReactDom","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.ec25aaad.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction('contacts/add', text => ({\r\n    payload: {\r\n        contacts: {\r\n            text,\r\n            id: uuidv4()\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst removeContact = createAction('contacts/remove');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst showModalWarning = createAction('contacts/modalWarning');\r\n\r\nconst actions = {\r\n    addContact,\r\n    removeContact,\r\n    changeFilter,\r\n    showModalWarning\r\n};\r\n\r\nexport default actions;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n        onAddContact: PropTypes.func.isRequired\r\n    };\r\n    \r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    // sameNameContact = () => {\r\n    //     const { name } = this.state;\r\n    //     return this.props.contactsItems.find(sameContact =>\r\n    //         sameContact.text.name.toLowerCase() === name.toLowerCase());\r\n    // };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // const sameNameContact = this.props.contactsItems.find(sameContact =>\r\n        //     sameContact.text.name.toLowerCase() === this.state.name.toLowerCase());\r\n        \r\n        const { name, number } = this.state;\r\n\r\n        const sameNameContact = this.props.contactsItems\r\n            .map(contact => contact.text.name)\r\n            .includes(name);\r\n        \r\n        const inputNumber = Number(number)\r\n\r\n        if (sameNameContact) {\r\n            this.props.onSameNameContact();\r\n            setTimeout(() => {\r\n                this.props.onSameNameContact();\r\n            }, 1500);\r\n        } else if (name.length === 0) {\r\n            alert(\"Field 'Name' must be filled!\");\r\n        } else if (number.length === 0) {\r\n            alert(\"Field 'Number' must be filled!\")\r\n        } else if (!inputNumber) {\r\n            alert(\"Insert the number\")\r\n        } else {\r\n            this.props.onAddContact({ ...this.state });\r\n        }\r\n\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n  \r\n    render() {\r\n        return (\r\n            <form\r\n                className={styles.TaskEditor}\r\n                onSubmit={this.handleSubmit}>\r\n                <label\r\n                    className={styles.TaskEditor_label}>\r\n                    Name\r\n                        <input\r\n                            className={styles.TaskEditor_input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Your name\"\r\n                            autoComplete=\"off\"\r\n                            autoFocus=\"on\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                </label>\r\n\r\n                <label\r\n                    className={styles.TaskEditor_label}>\r\n                    Number\r\n                    <input\r\n                        className={styles.TaskEditor_input}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        placeholder=\"Your number\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button\r\n                    className={styles.TaskEditor_button}\r\n                    type=\"submit\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      contactsItems: state.contacts.contactsItems,\r\n    //   modalWarning: !state.contacts.modalWarning\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onAddContact: contactsActions.addContact,\r\n    onSameNameContact: contactsActions.showModalWarning\r\n};\r\n// или так mapDispatchToProps\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         onAddContact: text => dispatch(contactsActions.addContact(text))\r\n//     }\r\n// };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './ContactList.css';\r\nimport contactsActions from '../../redux/contacts/contactsActions'\r\n\r\n// function ContactList({ contacts, onRemoveContact }) {\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n    <TransitionGroup\r\n        component=\"ul\"\r\n        className=\"TaskList\">\r\n            \r\n        {contacts.map(({id, text}) => (\r\n            <CSSTransition\r\n                key={id}\r\n                timeout={250}\r\n                classNames=\"ContactListAppear\"\r\n                // unmountOnExit\r\n            >\r\n                <li\r\n                    className=\"TaskList_item\"\r\n                    /*key={contact.id}*/>\r\n                    {text.name}: {text.number}\r\n                    {\r\n                        <button\r\n                            className=\"TaskList_button\"\r\n                            type=\"button\"\r\n                            name=\"delete\"\r\n                            onClick={() => onRemoveContact(id)}\r\n                        >\r\n                            x\r\n                        </button>\r\n                    }\r\n                </li>\r\n            </CSSTransition>\r\n        ))}\r\n    </TransitionGroup>\r\n);\r\n    \r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        })),\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { contactsItems, filter } = state.contacts;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = contactsItems.filter(item =>\r\n        item.text.name.toLowerCase().includes(normalizedFilter))\r\n    \r\n    return {\r\n        contacts: visibleContacts\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onRemoveContact: contactsActions.removeContact\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './Filter.css';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\n\r\n// function Filter({ value, onChangeFilter }) {\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n    <div className=\"Filter\">\r\n        <h2 className=\"FilterName\">Find contacts by name</h2>\r\n        <input className=\"FilterInput\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            value={value}\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n    </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter: contactsActions.changeFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <h1 className=\"HeaderName\">Phonebook</h1>\r\n  );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './Logo.css';\r\n\r\nfunction Logo() {\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //   </header>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ShowModalWarning.css';\r\n\r\nconst ShowModalWarning = () => (\r\n    <div\r\n        className=\"Modal\">\r\n        <p className=\"Modal-message\">\r\n            Contact already exist!\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport default ShowModalWarning;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport Header from './Header/Header';\r\nimport Logo from './Logo/Logo';\r\nimport ShowModalWarning from './ShowModal/ShowModalWarning';\r\nimport './App.css';\r\n\r\nfunction App({ modalWarning, contactsItems }) {\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n\r\n            <CSSTransition\r\n                in={true}\r\n                appear={true}\r\n                timeout={500}\r\n                classNames=\"HeaderAppear\"\r\n                unmountOnExit\r\n            >\r\n            {stage => {\r\n                // console.log(stage);\r\n                return (\r\n                    <div className=\"Header\">\r\n                        <Header />\r\n                        <CSSTransition\r\n                            in={stage === 'entered'}\r\n                            timeout={500}\r\n                            classNames=\"LogoAppear\"\r\n                            unmountOnExit\r\n                        >\r\n                            <Logo />\r\n                        </CSSTransition>\r\n                    </div>\r\n                )\r\n            }}\r\n            </CSSTransition>\r\n                <ContactForm\r\n            />\r\n\r\n            <CSSTransition\r\n                in={contactsItems.length > 1}\r\n                timeout={250}\r\n                classNames=\"FilterAppear\"\r\n                unmountOnExit\r\n            >\r\n                    <Filter/>\r\n            </CSSTransition>\r\n                \r\n            <CSSTransition\r\n                in={contactsItems.length > 0}\r\n                timeout={250}\r\n                classNames=\"ContactsAppear\"\r\n                unmountOnExit\r\n            >\r\n                <h2 className=\"ContactsName\">\r\n                    Contacts\r\n                </h2>\r\n            </CSSTransition>\r\n                \r\n            <CSSTransition\r\n                in={contactsItems.length > 0}\r\n                timeout={250}\r\n                classNames=\"ContactListApp\"\r\n                unmountOnExit\r\n            >\r\n                <ContactList/>\r\n            </CSSTransition>\r\n\r\n            <CSSTransition\r\n                in={modalWarning}\r\n                timeout={250}\r\n                classNames=\"ShowModalAppear\"\r\n                unmountOnExit\r\n            >\r\n\r\n             <ShowModalWarning />\r\n\r\n            </CSSTransition>\r\n               \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modalWarning: state.contacts.modalWarning,\r\n        contactsItems: state.contacts.contactsItems,\r\n        // filterShow: state.contacts.contactsItems\r\n    };\r\n};\r\n\r\nApp.propTypes = {\r\n    modalWarning: PropTypes.bool.isRequired,\r\n    contactsItems: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst onAddContact = (state, actions) => {\r\n    return [...state, actions.payload.contacts]\r\n};\r\nconst onRemoveContact = (state, actions) => {\r\n    return state.filter(contact => contact.id !== actions.payload)\r\n};\r\nconst onAddFilter = (state, actions) => actions.payload;\r\n\r\nconst onShowModal = (state, action) => {\r\n    return !state\r\n};\r\n\r\n\r\nconst contactsItems = createReducer([], {\r\n    [contactsActions.addContact]: onAddContact,\r\n    [contactsActions.removeContact]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.changeFilter]: onAddFilter\r\n});\r\n\r\nconst modalWarning = createReducer(false, {\r\n    [contactsActions.showModalWarning]: onShowModal\r\n});\r\n\r\n// const modalWarning = (state = false, {type}) => {\r\n    \r\n//     switch (type) {\r\n//         case contactsActions.showModalWarning:\r\n//             return !state;\r\n        \r\n//         default:\r\n//             return state;\r\n//     };\r\n// };\r\n\r\n\r\nexport default combineReducers({\r\n    contactsItems,\r\n    filter,\r\n    modalWarning\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer\r\n    },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\n// console.log(store.getState());\n\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__26-i2\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2kaG_\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__3iSFO\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__22gbe\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__36UqI\"};"],"sourceRoot":""}